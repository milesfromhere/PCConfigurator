<Window x:Class="PCConfigurator.Views.ProfileWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PCConfigurator.Views"
        xmlns:helpers="clr-namespace:PCConfigurator.Helpers"
        Title="Профиль" Height="700" Width="565"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource BackgroundBrush}"
        Cursor="{StaticResource MyCustomCursor}"
        Icon="C:\Users\nikit\OneDrive\Рабочий стол\proj\icon.png">
    <Window.Resources>
        <!-- Стиль для TextBox с простейшей валидацией: если возникла ошибка, выводится красная звёздочка и тултип -->
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="12" Margin="0,0,5,0" Text="*"/>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для PasswordBox – аналогичный стилю для TextBox -->
        <Style TargetType="PasswordBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="12" Margin="0,0,5,0" Text="*"/>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Верхняя секция: Информация профиля -->
            <RowDefinition Height="2*"/>
            <!-- Средняя секция: Список сборок -->
            <RowDefinition Height="*"/>
            <!-- Нижняя секция: Отправка сборок на почту -->
            <RowDefinition Height="Auto"/>
            <!-- Новый ряд для кнопки "Выйти" -->
        </Grid.RowDefinitions>

        <!-- Верхняя секция: Основная информация профиля -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Левая колонка: Аватар и базовые данные -->
            <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                <Border Width="120" Height="120" BorderThickness="2" BorderBrush="{DynamicResource ForegroundBrush}" Margin="0,0,0,10">
                    <Image Source="{Binding CurrentUser.AvatarPath}" Stretch="UniformToFill"/>
                </Border>
                <Button Content="Загрузить аватарку" Click="UploadAvatar_Click" Width="150" Margin="0,0,0,10"/>
                <TextBlock Text="Никнейм:" Foreground="{DynamicResource ForegroundBrush}" FontWeight="SemiBold"/>
                <!-- Валидация для логина -->
                <TextBox Text="{Binding CurrentUser.Username, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="150" Margin="0,5"/>
                <TextBlock Text="Почта:" Foreground="{DynamicResource ForegroundBrush}" FontWeight="SemiBold"/>
                <TextBox Text="{Binding CurrentUser.Email, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="150" Margin="0,5"/>
            </StackPanel>

            <!-- Правая колонка: Дополнительные настройки профиля -->
            <StackPanel Grid.Column="1" Margin="20,0,0,0">
                <TextBlock Text="Настройки профиля" FontSize="20" FontWeight="Bold" Foreground="{DynamicResource ForegroundBrush}" Margin="0,0,0,10"/>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                    <TextBlock Text="Имя:" Width="120" Foreground="{DynamicResource ForegroundBrush}"/>
                    <TextBox Text="{Binding CurrentUser.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Height="30" Width="160"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                    <TextBlock Text="Новый пароль:" Width="120" Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Используем PasswordBoxAssistant для привязки нового пароля -->
                        <PasswordBox x:Name="NewPasswordBox" Width="160" Height="30"
                         Background="{DynamicResource TextBoxBackgroundBrush}"
                         helpers:PasswordBoxAssistant.BindPassword="True"
                         helpers:PasswordBoxAssistant.BoundPassword="{Binding NewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <TextBox x:Name="NewPasswordTextBox" Width="200" Height="30"
                     Background="{DynamicResource TextBoxBackgroundBrush}"
                     Foreground="{DynamicResource ForegroundBrush}"
                     IsReadOnly="True"
                     Visibility="Collapsed"/>
                        <Button Grid.Column="1" Content="👁" Width="30" Height="30" Margin="2,0,0,0"
                    VerticalAlignment="Center"
                    PreviewMouseDown="ShowNewPassword_MouseDown"
                    PreviewMouseUp="ShowNewPassword_MouseUp"
                    MouseLeave="ShowNewPassword_MouseLeave"
                    Cursor="Hand"
                    Focusable="False"/>
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Повторите пароль:" Width="120" Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Аналогично для повторного ввода -->
                        <PasswordBox x:Name="RepeatPasswordBox" Width="160" Height="30"
                         Background="{DynamicResource TextBoxBackgroundBrush}"
                         helpers:PasswordBoxAssistant.BindPassword="True"
                         helpers:PasswordBoxAssistant.BoundPassword="{Binding RepeatPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <TextBox x:Name="RepeatPasswordTextBox" Width="170" Height="30"
                     Background="{DynamicResource TextBoxBackgroundBrush}"
                     Foreground="{DynamicResource ForegroundBrush}"
                     IsReadOnly="True"
                     Visibility="Collapsed"/>
                        <Button Grid.Column="1" Content="👁" Width="30" Height="30" Margin="2,0,0,0"
                    VerticalAlignment="Center"
                    PreviewMouseDown="ShowRepeatPassword_MouseDown"
                    PreviewMouseUp="ShowRepeatPassword_MouseUp"
                    MouseLeave="ShowRepeatPassword_MouseLeave"
                    Cursor="Hand"
                    Focusable="False"/>
                    </Grid>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <Button Content="Сохранить изменения" Command="{Binding SaveAccountCommand}" Width="150" Margin="0,0,10,0"/>
                    <Button Content="Удалить аккаунт" Command="{Binding DeleteAccountCommand}" Width="150" Background="Red" Foreground="White"/>
                </StackPanel>
                <!-- Новая секция: кнопка для перехода к отзывам -->
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10">
                    <Button Content="Отзывы о комплектующих" Click="ReviewsButton_Click" Style="{DynamicResource ModernButton}" Width="172" Height="30"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <!-- Средняя секция: Список сохранённых сборок -->
        <GroupBox Header="Ваши сборки" Grid.Row="1" Margin="0,10,0,10" Grid.RowSpan="2">
            <ListView ItemsSource="{Binding SavedBuilds}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding BuildSummary}" TextWrapping="Wrap" Margin="0,0,10,0"/>
                            <Button Grid.Column="1" Content="❌" Command="{Binding DataContext.DeleteBuildCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                    CommandParameter="{Binding}" Width="30" Height="30" Margin="0,0,0,0"
                                    ToolTip="Удалить сборку"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </GroupBox>

        <!-- Нижняя секция: Отправить сборки на почту -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0"/>

        <!-- Новый ряд: Кнопка "Выйти" -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10">
            <Button Content="Выйти" Click="Logout_Click" Style="{DynamicResource ModernButton}" Width="150" Height="30"/>
        </StackPanel>
    </Grid>
</Window>
